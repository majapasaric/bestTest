{"version":3,"sources":["../app.js"],"names":["express","require","session","redisStore","path","favicon","logger","cookieParser","bodyParser","helmet","passport","redis","index","users","app","config","use","contentSecurityPolicy","directives","defaultSrc","styleSrc","Sequelize","sequelize","process","env","DB_NAME","DB_USERNAME","DB_PASSWORD","dialect","SEQUELIZE_DIALECT","port","DB_PORT","authenticate","then","err","console","log","client","REDIS_URL","createClient","REDIS_PORT","REDIS_HOST","store","secret","SECRET_KEY","resave","saveUninitialized","initialize","set","join","__dirname","json","urlencoded","extended","static","req","res","next","Error","status","locals","message","error","get","render","module","exports"],"mappings":"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","file":"app.js","sourcesContent":["const express = require('express');\nconst session = require('express-session');\nconst redisStore = require('connect-redis')(session);\nconst path = require('path');\nconst favicon = require('serve-favicon');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst helmet = require('helmet')\nlet passport = require('passport');\nconst redis = require(\"redis\");\n\nconst index = require('./routes/index');//TODO: consider removing these two\nconst users = require('./routes/users');\n\nconst app = express();\nrequire('dotenv').config({path: './environments/development'});\napp.use(helmet());\napp.use(helmet.contentSecurityPolicy({\n    directives: {\n        defaultSrc: [\"'self'\"],\n        styleSrc: [\"'self'\"]\n    }\n}));\n\nconst Sequelize = require('sequelize')\n    , sequelize = new Sequelize(process.env.DB_NAME, process.env.DB_USERNAME, process.env.DB_PASSWORD, {\n    dialect: process.env.SEQUELIZE_DIALECT, // or 'sqlite', 'postgres', 'mariadb'\n    port:    process.env.DB_PORT\n});\n\nsequelize\n    .authenticate()\n    .then(function(err) {\n        console.log('Connection has been established successfully.');\n    }, function (err) {\n        console.log('Unable to connect to the database:', err);\n    });\n\nlet client;\nrequire('./server/passport')(passport);\nif(typeof process.env.REDIS_URL === \"undefined\"){\n    client = redis.createClient(process.env.REDIS_PORT, process.env.REDIS_HOST);\n}else{\n    client = redis.createClient(process.env.REDIS_URL);\n}\napp.use(session({\n    store: new redisStore({\n        client: client\n    }),\n    secret: process.env.SECRET_KEY,\n    resave: false,\n    saveUninitialized: true\n}));\napp.use(passport.initialize());\napp.use(passport.session());\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hbs');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', index);\napp.use('/users', users);\n\nrequire('./server/routes')(app, passport);\n\n// catch 404 and forward to error handler\napp.use((req, res, next)=> {\n  let err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use((err, req, res, next)=> {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"]}