{"version":3,"sources":["../../server/passport.js"],"names":["LocalStrategy","require","Strategy","User","module","exports","passport","serializeUser","user","done","id","deserializeUser","findById","err","use","usernameField","passwordField","passReqToCallback","req","email","password","process","nextTick","findOne","where","then","newUser","generateHash","save","flash","message","validPassword"],"mappings":";;AAAA,IAAIA,gBAAgBC,QAAQ,gBAAR,EAA0BC,QAA9C;AACA,IAAIC,OAAOF,QAAQ,gCAAR,CAAX;;AAEAG,OAAOC,OAAP,GAAiB,UAASC,QAAT,EAAmB;;AAEhCA,aAASC,aAAT,CAAuB,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACxCA,aAAK,IAAL,EAAWD,KAAKE,EAAhB;AACH,KAFD;;AAIAJ,aAASK,eAAT,CAAyB,UAASD,EAAT,EAAaD,IAAb,EAAmB;AACxCN,aAAKS,QAAL,CAAcF,EAAd,EAAkB,UAASG,GAAT,EAAcL,IAAd,EAAoB;AAClCC,iBAAKI,GAAL,EAAUL,IAAV;AACH,SAFD;AAGH,KAJD;;AAMAF,aAASQ,GAAT,CAAa,cAAb,EAA6B,IAAId,aAAJ,CAAkB;AACvCe,uBAAgB,OADuB;AAEvCC,uBAAgB,UAFuB;AAGvCC,2BAAoB,IAHmB,CAGd;AAHc,KAAlB,EAKzB,UAASC,GAAT,EAAcC,KAAd,EAAqBC,QAArB,EAA+BX,IAA/B,EAAqC;;AAEjCY,gBAAQC,QAAR,CAAiB,YAAK;AAClBnB,iBAAKoB,OAAL,CAAa;AACTC,uBAAO,EAACL,OAAOA,KAAR;AADE,aAAb,EAGKM,IAHL,CAGU,UAACjB,IAAD,EAAS;AACf,oBAAIA,QAAQ,IAAZ,EAAkB;AAAA;AACd,4BAAIkB,UAAU,IAAIvB,IAAJ,EAAd;AACAuB,gCAAQP,KAAR,GAAgBA,KAAhB;AACAO,gCAAQN,QAAR,GAAmBM,QAAQC,YAAR,CAAqBP,QAArB,CAAnB,CAHc,CAGqC;;AAEnDM,gCAAQE,IAAR,CAAa,UAAUf,GAAV,EAAe;AACxB,gCAAIA,GAAJ,EACI,MAAMA,GAAN;AACJ,mCAAOJ,KAAK,IAAL,EAAWiB,OAAX,CAAP;AACH,yBAJD;AALc;AAUjB,iBAVD,MAUO;AACH,2BAAOjB,KAAK,IAAL,EAAW,KAAX,EAAkBS,IAAIW,KAAJ,CAAU,eAAV,EAA2B,8BAA3B,CAAlB,CAAP;AACH;AAEJ,aAlBD;AAmBH,SApBD;AAsBH,KA7BwB,CAA7B;;AA+BAvB,aAASQ,GAAT,CAAa,aAAb,EAA4B,IAAId,aAAJ,CAAkB;AACtCe,uBAAgB,OADsB;AAEtCC,uBAAgB,UAFsB;AAGtCC,2BAAoB,IAHkB,CAGb;AAHa,KAAlB,EAKxB,UAASC,GAAT,EAAcC,KAAd,EAAqBC,QAArB,EAA+BX,IAA/B,EAAqC;AAAE;;AAEnCN,aAAKoB,OAAL,CAAa;AACTC,mBAAO,EAACL,OAAOA,KAAR;AADE,SAAb,EAGKM,IAHL,CAGU,UAACjB,IAAD,EAAQ;AACV,gBAAGA,QAAQ,IAAX,EAAgB;AACZ,uBAAOC,KAAK,IAAL,EAAW,KAAX,EAAkB,EAAEqB,SAAS,wBAAX,EAAlB,CAAP;AACH,aAFD,MAEK;AACD,oBAAG,CAACtB,KAAKuB,aAAL,CAAmBX,QAAnB,CAAJ,EAAiC;AAC7B,2BAAOX,KAAK,IAAL,EAAW,KAAX,EAAkB,EAAEqB,SAAS,wBAAX,EAAlB,CAAP;AACH,iBAFD,MAEK;AACD,2BAAOrB,KAAK,IAAL,EAAWD,IAAX,CAAP;AACH;AACJ;AACJ,SAbL;AAcH,KArBuB,CAA5B;AAuBH,CAlED","file":"passport.js","sourcesContent":["let LocalStrategy = require('passport-local').Strategy;\r\nlet User = require('./models-sequelize/models/user');\r\n\r\nmodule.exports = function(passport) {\r\n\r\n    passport.serializeUser(function(user, done) {\r\n        done(null, user.id);\r\n    });\r\n\r\n    passport.deserializeUser(function(id, done) {\r\n        User.findById(id, function(err, user) {\r\n            done(err, user);\r\n        });\r\n    });\r\n\r\n    passport.use('local-signup', new LocalStrategy({\r\n            usernameField : 'email',\r\n            passwordField : 'password',\r\n            passReqToCallback : true // allows us to pass back the entire request to the callback\r\n        },\r\n        function(req, email, password, done) {\r\n\r\n            process.nextTick(()=> {\r\n                User.findOne({\r\n                    where: {email: email}\r\n                })\r\n                    .then((user)=> {\r\n                    if (user == null) {\r\n                        let newUser = new User();\r\n                        newUser.email = email;\r\n                        newUser.password = newUser.generateHash(password); //I have to set up the taking of the rest of the req\r\n\r\n                        newUser.save(function (err) {\r\n                            if (err)\r\n                                throw err;\r\n                            return done(null, newUser);\r\n                        });\r\n                    } else {\r\n                        return done(null, false, req.flash('signupMessage', 'That email is already taken.'));\r\n                    }\r\n\r\n                });\r\n            });\r\n\r\n        }));\r\n\r\n    passport.use('local-login', new LocalStrategy({\r\n            usernameField : 'email',\r\n            passwordField : 'password',\r\n            passReqToCallback : true // allows us to pass back the entire request to the callback\r\n        },\r\n        function(req, email, password, done) { // callback with email and password from our form\r\n\r\n            User.findOne({\r\n                where: {email: email}\r\n            })\r\n                .then((user)=>{\r\n                    if(user == null){\r\n                        return done(null, false, { message: 'Incorrect credentials.' });\r\n                    }else{\r\n                        if(!user.validPassword(password)){\r\n                            return done(null, false, { message: 'Incorrect credentials.' });\r\n                        }else{\r\n                            return done(null, user);\r\n                        }\r\n                    }\r\n                });\r\n        }));\r\n\r\n};\r\n"]}