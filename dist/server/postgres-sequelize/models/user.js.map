{"version":3,"sources":["../../../../server/models-sequelize/models/user.js"],"names":["module","exports","sequelize","DataTypes","User","define","id","UUID","primaryKey","defaultValue","UUIDV4","password","STRING","allowNull","email","validate","isEmail","personalIdentificationNumber","address","phoneContact","educationLevel","occupation","gender","type","ENUM","values","classMethods","associate","models","belongsTo","Organization","belongsToMany","Group","through","UsersGroups"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAAwB;AACrC,QAAMC,OAAOF,UAAUG,MAAV,CAAiB,MAAjB,EAAyB;AAClCC,YAAIH,UAAUI,IADoB;AAElCC,oBAAa,IAFqB;AAGlCC,sBAAeN,UAAUO;AAHS,KAAzB,EAIV;AACCC,kBAAWR,UAAUS,MADtB;AAECC,mBAAY;AAFb,KAJU,EAOV;AACCC,eAAQX,UAAUS,MADnB;AAECG,kBAAW,EAACC,SAAS,IAAV;AAFZ,KAPU,EAWX;AACEC,sCAA+Bd,UAAUS;AAD3C,KAXW,EAcT;AACIM,iBAAUf,UAAUS;AADxB,KAdS,EAiBT;AACIO,sBAAchB,UAAUS;AAD5B,KAjBS,EAoBT;AACIQ,wBAAiBjB,UAAUS;AAD/B,KApBS,EAuBT;AACIS,oBAAalB,UAAUS;AAD3B,KAvBS,EA0BT;AACIU,gBAAS;AACLC,kBAAQpB,UAAUqB,IADb;AAELC,oBAAQ,CAAC,MAAD,EAAS,QAAT,EAAmB,UAAnB,EAA+B,YAA/B,EAA6C,2BAA7C;AAFH;AADb,KA1BS,EAgCT;AACAC,sBAAc;AACVC,uBAAY,mBAACC,MAAD,EAAW;AACnBxB,qBAAKyB,SAAL,CAAeD,OAAOE,YAAtB;AACA1B,qBAAK2B,aAAL,CAAmBH,OAAOI,KAA1B,EAAiC,EAAEC,SAASL,OAAOM,WAAlB,EAAjC;AACH;AAJS;AADd,KAhCS,CAAb;AAwCA,WAAO9B,IAAP;AACH,CA1CD","file":"user.js","sourcesContent":["module.exports = (sequelize, DataTypes)=>{\n    const User = sequelize.define('User', {\n        id: DataTypes.UUID,\n        primaryKey : true,\n        defaultValue : DataTypes.UUIDV4\n    }, {\n        password : DataTypes.STRING,\n        allowNull : false\n    }, {\n        email : DataTypes.STRING,\n        validate : {isEmail: true}\n        }\n    , {\n        personalIdentificationNumber : DataTypes.STRING\n        },\n        {\n            address : DataTypes.STRING\n        },\n        {\n            phoneContact: DataTypes.STRING\n        },\n        {\n            educationLevel : DataTypes.STRING\n        },\n        {\n            occupation : DataTypes.STRING\n        },\n        {\n            gender : {\n                type:   DataTypes.ENUM,\n                values: ['male', 'female', 'intersex', 'non-binary', 'would rather not disclose']\n            }\n        },\n        {\n        classMethods: {\n            associate : (models)=> {\n                User.belongsTo(models.Organization);\n                User.belongsToMany(models.Group, { through: models.UsersGroups });\n            }\n        }\n    });\n    return User;\n};"]}