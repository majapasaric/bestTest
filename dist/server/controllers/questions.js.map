{"version":3,"sources":["../../../server/controllers/questions.js"],"names":["uuidV4","require","Question","module","exports","create","req","res","id","revisionCode","difficultyLevel","body","answerInputType","answerContentType","pointsIfCorrect","pointsIfIncorrect","then","status","send","question","catch","error","findByIdAndRevisionCode","findOne","where","questionId","message","listRevisions","findAll","rejectOnEmpty","questions"],"mappings":";;AAAA;;;AAGA,IAAMA,SAASC,QAAQ,SAAR,CAAf;AACA,IAAMC,WAAWD,QAAQ,4BAAR,EAAsCC,QAAvD;;AAEAC,OAAOC,OAAP,GAAiB;AACbC,UADa,kBACNC,GADM,EACDC,GADC,EACI;AACb,eAAOL,SACFG,MADE,CACK;AACJG,gBAAIR,QADA;AAEJS,0BAAc,CAFV;AAGJC,6BAAiBJ,IAAIK,IAAJ,CAASD,eAHtB;AAIJE,6BAAiBN,IAAIK,IAAJ,CAASC,eAJtB;AAKJC,+BAAmBP,IAAIK,IAAJ,CAASE,iBALxB;AAMJC,6BAAiBR,IAAIK,IAAJ,CAASG,eANtB;AAOJC,+BAAmBT,IAAIK,IAAJ,CAASI;AAPxB,SADL,EAUFC,IAVE,CAUG;AAAA,mBAAYT,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,QAArB,CAAZ;AAAA,SAVH,EAWFC,KAXE,CAWI;AAAA,mBAASb,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,KAArB,CAAT;AAAA,SAXJ,CAAP;AAYH,KAdY;AAebC,2BAfa,mCAeWhB,GAfX,EAegBC,GAfhB,EAeoB;AAC7B,eAAOL,SAASqB,OAAT,CAAiB;AACpBC,mBAAO,EAAChB,IAAIF,IAAIK,IAAJ,CAASc,UAAd;AACHhB,8BAAcH,IAAIK,IAAJ,CAASF,YADpB;AADa,SAAjB,EAIFO,IAJE,CAIG,oBAAY;AAClB,gBAAGG,YAAY,IAAf,EAAoB;AAChB,uBAAOZ,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBQ,6BAAS;AADe,iBAArB,CAAP;AAGH,aAJD,MAIK;AACD,uBAAOnB,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,QAArB,CAAP;AACH;AACJ,SAZM,EAaFC,KAbE,CAaI;AAAA,mBAASb,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,KAArB,CAAT;AAAA,SAbJ,CAAP;AAcH,KA9BY;AA+BbM,iBA/Ba,yBA+BCrB,GA/BD,EA+BMC,GA/BN,EA+BU;AACnB,eAAOL,SAAS0B,OAAT,CAAiB;AACpBJ,mBAAO,EAAChB,IAAIF,IAAIK,IAAJ,CAASc,UAAd;AACHI,+BAAe,KADZ;AADa,SAAjB,EAIFb,IAJE,CAIG,qBAAa;AACf,gBAAGc,cAAc,EAAjB,EAAoB;AAChB,uBAAOvB,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,6BAArB,CAAP;AACH,aAFD,MAEK;AACD,uBAAOX,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBY,SAArB,CAAP;AACH;AACJ,SAVE,CAAP;AAWH;AA3CY,CAAjB","file":"questions.js","sourcesContent":["/**\r\n * Created by mpasaric on 17.2.2017..\r\n */\r\nconst uuidV4 = require('uuid/v4');\r\nconst Question = require('../models-sequelize/models').Question;\r\n\r\nmodule.exports = {\r\n    create(req, res) {\r\n        return Question\r\n            .create({\r\n                id: uuidV4(),\r\n                revisionCode: 0,\r\n                difficultyLevel: req.body.difficultyLevel,\r\n                answerInputType: req.body.answerInputType,\r\n                answerContentType: req.body.answerContentType,\r\n                pointsIfCorrect: req.body.pointsIfCorrect,\r\n                pointsIfIncorrect: req.body.pointsIfIncorrect\r\n            })\r\n            .then(question => res.status(201).send(question))\r\n            .catch(error => res.status(400).send(error));\r\n    },\r\n    findByIdAndRevisionCode(req, res){\r\n        return Question.findOne({\r\n            where: {id: req.body.questionId,\r\n                revisionCode: req.body.revisionCode}\r\n        })\r\n            .then(question => {\r\n            if(question == null){\r\n                return res.status(404).send({\r\n                    message: 'Question Not Found',\r\n                });\r\n            }else{\r\n                return res.status(200).send(question);\r\n            }\r\n        })\r\n            .catch(error => res.status(400).send(error));\r\n    },\r\n    listRevisions(req, res){\r\n        return Question.findAll({\r\n            where: {id: req.body.questionId,\r\n                rejectOnEmpty: false}\r\n        })\r\n            .then(questions => {\r\n                if(questions === []){\r\n                    return res.status(404).send('No Question(s) Found For Id');\r\n                }else{\r\n                    return res.status(200).send(questions);\r\n                }\r\n            });\r\n    }\r\n};"]}