{"version":3,"sources":["../../../../server/models-sequelize/models/index.js"],"names":["fs","require","path","Sequelize","basename","module","filename","env","process","NODE_ENV","config","__dirname","db","sequelize","use_env_variable","database","username","password","readdirSync","filter","file","indexOf","slice","forEach","model","import","join","name","Object","keys","modelName","associate","exports"],"mappings":";;AAAA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,YAAYF,QAAQ,WAAR,CAAlB;AACA,IAAMG,WAAWF,KAAKE,QAAL,CAAcC,OAAOC,QAArB,CAAjB;AACA,IAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACAR,QAAQ,QAAR,EAAkBS,MAAlB,CAAyB,EAACR,MAAM,mCAAP,EAAzB;AACAQ,SAAST,QAAQU,YAAY,sBAApB,EAA4CJ,GAA5C,CAAT;AACA,IAAMK,KAAK,EAAX;;AAEA,IAAIC,kBAAJ;AACA,IAAIH,OAAOI,gBAAX,EAA6B;AACzBD,gBAAY,IAAIV,SAAJ,CAAcK,QAAQD,GAAR,CAAYG,OAAOI,gBAAnB,CAAd,CAAZ;AACH,CAFD,MAEO;AACHD,gBAAY,IAAIV,SAAJ,CACRO,OAAOK,QADC,EACSL,OAAOM,QADhB,EAC0BN,OAAOO,QADjC,EAC2CP,MAD3C,CAAZ;AAGH;;AAEDV,GACKkB,WADL,CACiBP,SADjB,EAEKQ,MAFL,CAEY;AAAA,WACPC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IACCD,SAAShB,QADV,IAECgB,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAHZ;AAAA,CAFZ,EAMKC,OANL,CAMa,gBAAQ;AACb,QAAMC,QAAQX,UAAUY,MAAV,CAAiBvB,KAAKwB,IAAL,CAAUf,SAAV,EAAqBS,IAArB,CAAjB,CAAd;AACAR,OAAGY,MAAMG,IAAT,IAAiBH,KAAjB;AACH,CATL;;AAWAI,OAAOC,IAAP,CAAYjB,EAAZ,EAAgBW,OAAhB,CAAwB,qBAAa;AACjC,QAAIX,GAAGkB,SAAH,EAAcC,SAAlB,EAA6B;AACzBnB,WAAGkB,SAAH,EAAcC,SAAd,CAAwBnB,EAAxB;AACH;AACJ,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGT,SAAH,GAAeA,SAAf;;AAEAE,OAAO2B,OAAP,GAAiBpB,EAAjB","file":"index.js","sourcesContent":["const fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst basename = path.basename(module.filename);\nconst env = process.env.NODE_ENV || 'development';\nrequire('dotenv').config({path: '../../../environments/development'});\nconfig = require(__dirname + '/../config/config.js')[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n    sequelize = new Sequelize(process.env[config.use_env_variable]);\n} else {\n    sequelize = new Sequelize(\n        config.database, config.username, config.password, config\n    );\n}\n\nfs\n    .readdirSync(__dirname)\n    .filter(file =>\n    (file.indexOf('.') !== 0) &&\n    (file !== basename) &&\n    (file.slice(-3) === '.js'))\n    .forEach(file => {\n        const model = sequelize.import(path.join(__dirname, file));\n        db[model.name] = model;\n    });\n\nObject.keys(db).forEach(modelName => {\n    if (db[modelName].associate) {\n        db[modelName].associate(db);\n    }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;"]}